<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tmt.kontroll</groupId>
	<artifactId>parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<!-- general -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- dependency versions -->
		<aspectj.version>1.7.0</aspectj.version>
		<apache.commons.io.version>2.4</apache.commons.io.version>
		<apache.commons.lang3.version>3.1</apache.commons.lang3.version>
		<cglib.version>2.2.2</cglib.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<dbunit.version>2.4.9</dbunit.version>
		<dbunit.datasetbuilder.version>1.0-SNAPSHOT</dbunit.datasetbuilder.version>
		<org.hibernate.version>4.1.4.Final</org.hibernate.version>
		<hibernate-jpa-2.0-api.version>1.0.1.Final</hibernate-jpa-2.0-api.version>
		<hibernate-jpamodelgen.version>1.2.0.Final</hibernate-jpamodelgen.version>
		<hibernate-envers.version>4.1.3.Final</hibernate-envers.version>
		<hibernate.validator.version>4.2.0.Final</hibernate.validator.version>
		<hsqldb.version>2.2.8</hsqldb.version>
		<jackson.version>2.4.2</jackson.version>
		<javax.servlet.version>3.1.0</javax.servlet.version>
		<jetty.version>8.1.8.v20121106</jetty.version>
		<jstl.version>1.2</jstl.version>
		<junit.version>4.10</junit.version>
		<log4j.version>1.2.17</log4j.version>
		<maven.resource.plugin.version>2.4.3</maven.resource.plugin.version>
		<mockito.version>1.9.5</mockito.version>
		<powermock.version>1.5.5</powermock.version>
		<querydsl.version>3.3.0</querydsl.version>
		<slf4j.version>1.6.6</slf4j.version>
		<spring.version>4.1.0.RELEASE</spring.version>
		<spring.data.version>1.7.0.RELEASE</spring.data.version>
		<spring.test.dbunit.version>1.1.0</spring.test.dbunit.version>
		<javax.validation.version>1.0.0.GA</javax.validation.version>

		<!-- sonar -->
		<sonar.language>java</sonar.language>
		<sonar.dynamicAnalysis>true</sonar.dynamicAnalysis>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
	</properties>

	<modules>
		<module>kontroll-annotations</module>
		<module>kontroll-commons</module>
		<module>kontroll-content</module>
		<module>kontroll-context</module>
		<module>kontroll-persistence</module>
		<module>kontroll-ui</module>
		<module>kontroll-web</module>
		<module>kontroll-test</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- module: annotations -->
			<dependency>
				<groupId>com.tmt.kontroll</groupId>
				<artifactId>kontroll-annotations</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- module: commons -->
			<dependency>
				<groupId>com.tmt.kontroll</groupId>
				<artifactId>kontroll-commons</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- module: content -->
			<dependency>
				<groupId>com.tmt.kontroll</groupId>
				<artifactId>kontroll-content</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- module: context -->
			<dependency>
				<groupId>com.tmt.kontroll</groupId>
				<artifactId>kontroll-context</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- module: persistence -->
			<dependency>
				<groupId>com.tmt.kontroll</groupId>
				<artifactId>kontroll-persistence</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- module: ui -->
			<dependency>
				<groupId>com.tmt.kontroll</groupId>
				<artifactId>kontroll-ui</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- module: web -->
			<dependency>
				<groupId>com.tmt.kontroll</groupId>
				<artifactId>kontroll-web</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- module: test -->
			<dependency>
				<groupId>com.tmt.kontroll</groupId>
				<artifactId>kontroll-test</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- aop -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjtools</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<!-- apache commons io -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${apache.commons.io.version}</version>
			</dependency>
			<!-- apache commons lang3 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${apache.commons.lang3.version}</version>
			</dependency>
			<!-- code generation library -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>
			<!-- dbcp -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons-dbcp.version}</version>
			</dependency>
			<!-- db unit -->
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>${dbunit.version}</version>
			</dependency>
			<!-- dbunit dataset builder -->
			<dependency>
				<groupId>org.dbunit.datasetbuilder</groupId>
				<artifactId>dbunit-datasetbuilder</artifactId>
				<version>${dbunit.datasetbuilder.version}</version>
			</dependency>
			<!-- Hibernate -->
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<version>${hibernate-jpa-2.0-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-jpamodelgen</artifactId>
				<version>${hibernate-jpamodelgen.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${org.hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${org.hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-envers</artifactId>
				<version>${hibernate-envers.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
			</dependency>
			<!-- hsqldb -->
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>${hsqldb.version}</version>
			</dependency>
			<!-- jackson-databind -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<!-- javax servlet api -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet.version}</version>
			</dependency>
			<!-- jetty server -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${jetty.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- jetty servlets -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlets</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<!-- jstl -->
			<dependency>
				<groupId>jstl</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>
			<!-- junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<!-- maven resource plugin -->
			<!-- dependency> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-resources-plugin</artifactId> 
				<version>${maven.resource.plugin.version}</version> </dependency -->
			<!-- mockito -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
			</dependency>
			<!-- power mock junit -->
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
			</dependency>
			<!-- power mock api -->
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>${powermock.version}</version>
			</dependency>
			<!-- querydsl apt -->
			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-apt</artifactId>
				<version>${querydsl.version}</version>
			</dependency>
			<!-- querydsl core -->
			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-core</artifactId>
				<version>${querydsl.version}</version>
			</dependency>
			<!-- querydsl jpa -->
			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-jpa</artifactId>
				<version>${querydsl.version}</version>
			</dependency>
			<!-- slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- spring aop -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring beans -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring context -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring context support -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring core -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring data -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring.data.version}</version>
			</dependency>
			<!-- spring jdbc -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring orm -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring security -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>org.springframework.security.web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>org.springframework.security.config</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>org.springframework.security.taglibs</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring test -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring test dbunit -->
			<dependency>
				<groupId>com.github.springtestdbunit</groupId>
				<artifactId>spring-test-dbunit</artifactId>
				<version>${spring.test.dbunit.version}</version>
			</dependency>
			<!-- spring tx -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring web -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring web mvc -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- validation -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${javax.validation.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
	</repositories>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.6.4.201312101107</version>
					<configuration>
						<destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
						<dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
					</configuration>
					<executions>
						<execution>
							<id>jacoco-initialize</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-site</id>
							<phase>install</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.14.1</version>
					<configuration>
						<argLine>-XX:-UseSplitVerifier</argLine>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>